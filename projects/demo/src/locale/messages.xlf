<?xml version="1.0" encoding="UTF-8" ?>
<xliff version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" srcLang="en-US">
  <file id="ngi18n" original="ng.template">
    <unit id="demo.navigation.dashboard">
      <segment>
        <source>Dashboard</source>
      </segment>
    </unit>
    <unit id="demo.navigation.radialGaugeDemo">
      <segment>
        <source>Radial Gauge Demo</source>
      </segment>
    </unit>
    <unit id="demo.navigation.colors">
      <segment>
        <source>Colors Overview</source>
      </segment>
    </unit>
    <unit id="demo.app.title">
      <segment>
        <source>Dashboard Demo and Component Tests</source>
      </segment>
    </unit>
    <unit id="demo.theme.switchToLight">
      <segment>
        <source>Switch to light theme</source>
      </segment>
    </unit>
    <unit id="demo.theme.switchToDark">
      <segment>
        <source>Switch to dark theme</source>
      </segment>
    </unit>
    <unit id="demo.theme.selectTheme">
      <segment>
        <source>Select theme</source>
      </segment>
    </unit>
    <unit id="demo.theme.selectSpecific">
      <segment>
        <source>Select <ph id="0" equiv="INTERPOLATION" disp="themeName"/> theme</source>
      </segment>
    </unit>
    <unit id="demo.colors.title">
      <segment>
        <source>Color System Overview</source>
      </segment>
    </unit>
    <unit id="demo.colors.subtitle">
      <segment>
        <source>Current theme&apos;s Material Design 3 color tokens</source>
      </segment>
    </unit>
    <unit id="demo.colors.variableName">
      <segment>
        <source>Variable Name</source>
      </segment>
    </unit>
    <unit id="demo.colors.colorValue">
      <segment>
        <source>Color Value</source>
      </segment>
    </unit>
    <unit id="demo.colors.preview">
      <segment>
        <source>Preview</source>
      </segment>
    </unit>
    <unit id="demo.colors.colorPreview">
      <segment>
        <source>Color preview for <ph id="0" equiv="INTERPOLATION" disp="colorName"/></source>
      </segment>
    </unit>
    <unit id="demo.dashboard.exportToFile">
      <segment>
        <source>Export to File</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.importFromFile">
      <segment>
        <source>Import from File</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.saveToBrowser">
      <segment>
        <source>Save to Browser</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.loadFromBrowser">
      <segment>
        <source>Load from Browser</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.resetToDefault">
      <segment>
        <source>Reset to Default</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.clearDashboard">
      <segment>
        <source>Clear Dashboard</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.closeSpeedDialMenu">
      <segment>
        <source>Close speed dial menu</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.switchToViewMode">
      <segment>
        <source>Switch to View Mode</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.switchToEditMode">
      <segment>
        <source>Switch to Edit Mode</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.closeMenu">
      <segment>
        <source>Close menu</source>
      </segment>
    </unit>
    <unit id="demo.dashboard.dashboardActions">
      <segment>
        <source>Dashboard actions</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.title">
      <segment>
        <source>Radial Gauge Component Demo</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.controls">
      <segment>
        <source>Gauge Controls</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.presetConfigurations">
      <segment>
        <source>Preset Configurations</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.default">
      <segment>
        <source>Default</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.temperature">
      <segment>
        <source>Temperature</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.performance">
      <segment>
        <source>Performance</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.battery">
      <segment>
        <source>Battery</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.network">
      <segment>
        <source>Network</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.storage">
      <segment>
        <source>Storage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.valueSettings">
      <segment>
        <source>Value Settings</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.valueLabel">
      <segment>
        <source>Value: <ph id="0" equiv="INTERPOLATION" disp="{{ value() }}"/></source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.randomValue">
      <segment>
        <source>Random Value</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.min">
      <segment>
        <source>Min</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.max">
      <segment>
        <source>Max</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.dimensions">
      <segment>
        <source>Dimensions</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.sizeLabel">
      <segment>
        <source>Size: <ph id="0" equiv="INTERPOLATION" disp="{{ size() }}"/>px</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.outerThicknessLabel">
      <segment>
        <source>Outer Thickness: <ph id="0" equiv="INTERPOLATION" disp="{{ outerThickness() }}"/>px</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.innerThicknessLabel">
      <segment>
        <source>Inner Thickness: <ph id="0" equiv="INTERPOLATION" disp="{{ innerThickness() }}"/>px</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.gapLabel">
      <segment>
        <source>Gap: <ph id="0" equiv="INTERPOLATION" disp="{{ gap() }}"/>px</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.segmentGapLabel">
      <segment>
        <source>Segment Gap: <ph id="0" equiv="INTERPOLATION" disp="{{ segmentGapPx() }}"/>px</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.animation">
      <segment>
        <source>Animation</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.startAnimation">
      <segment>
        <source>Start Animation</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.stopAnimation">
      <segment>
        <source>Stop Animation</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.advancedFeatures">
      <segment>
        <source>Advanced Features</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.showValueLabel">
      <segment>
        <source>Show Value Label</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.hasBackground">
      <segment>
        <source>Has Background</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.labelReference">
      <segment>
        <source>Label Reference</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.labelReferencePlaceholder">
      <segment>
        <source>e.g., &apos;00000&apos; or leave empty</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.labelReferenceHint">
      <segment>
        <source>Text/number for width calculation</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.referenceGlyph">
      <segment>
        <source>Reference Glyph</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.referenceGlyphHint">
      <segment>
        <source>Single character</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.labelPaddingLabel">
      <segment>
        <source>Label Padding: <ph id="0" equiv="INTERPOLATION" disp="{{ labelPadding() }}"/>px</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.baselineSafetyLabel">
      <segment>
        <source>Baseline Safety: <ph id="0" equiv="INTERPOLATION" disp="{{ baselineSafety() }}"/></source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.preview">
      <segment>
        <source>Gauge Preview</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.animatedGauge">
      <segment>
        <source>Animated Gauge</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.liveData">
      <segment>
        <source>Live Data</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.realtimeMonitoring">
      <segment>
        <source>Real-time monitoring</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.responsiveContainerDemo">
      <segment>
        <source>Responsive Container Demo</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.responsiveDescription">
      <segment>
        <source> Drag the resize handles to see the gauge adapt to container size changes. The gauge uses <pc id="0" equivStart="START_TAG_CODE" equivEnd="CLOSE_TAG_CODE" type="other" dispStart="&lt;code&gt;" dispEnd="&lt;/code&gt;">fitToContainer=true</pc> and <pc id="1" equivStart="START_TAG_CODE" equivEnd="CLOSE_TAG_CODE" type="other" dispStart="&lt;code&gt;" dispEnd="&lt;/code&gt;">responsiveMode=true</pc> for automatic sizing and proportional thickness scaling. </source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.containerWidthLabel">
      <segment>
        <source>Container Width: <ph id="0" equiv="INTERPOLATION" disp="{{ containerWidth() }}"/>px</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.containerHeightLabel">
      <segment>
        <source>Container Height: <ph id="0" equiv="INTERPOLATION" disp="{{ containerHeight() }}"/>px</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.sizeToThicknessRatioLabel">
      <segment>
        <source>Size To Thickness Ratio: <ph id="0" equiv="INTERPOLATION" disp="{{ sizeToThicknessRatio() }}"/></source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.dimensionsDisplay">
      <segment>
        <source><ph id="0" equiv="INTERPOLATION" disp="{{ containerWidth() }}"/> × <ph id="1" equiv="INTERPOLATION_1" disp="{{ containerHeight() }}"/>px container</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.dashboardExample">
      <segment>
        <source>Dashboard Example</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.cpuUsage">
      <segment>
        <source>CPU Usage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.cpuUsageTitle">
      <segment>
        <source>CPU Usage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.percentage">
      <segment>
        <source>Percentage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.memory">
      <segment>
        <source>Memory</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.memoryUsageTitle">
      <segment>
        <source>Memory Usage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.percentageMemory">
      <segment>
        <source>Percentage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.diskIO">
      <segment>
        <source>Disk I/O</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.diskIOTitle">
      <segment>
        <source>Disk I/O</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.percentageDisk">
      <segment>
        <source>Percentage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.networkHeader">
      <segment>
        <source>Network</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.networkTitle">
      <segment>
        <source>Network</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.signalStrength">
      <segment>
        <source>Signal Strength</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.batteryHeader">
      <segment>
        <source>Battery</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.batteryTitle">
      <segment>
        <source>Battery</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.chargeLevel">
      <segment>
        <source>Charge Level</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.temperatureHeader">
      <segment>
        <source>Temperature</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.temperatureTitle">
      <segment>
        <source>Temperature</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.celsius">
      <segment>
        <source>Celsius</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.usageExamples">
      <segment>
        <source>Usage Examples</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.responsiveContainerGauge">
      <segment>
        <source>1. Responsive Container Gauge (Recommended for Dashboards)</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.fixedSizeGauge">
      <segment>
        <source>2. Fixed Size Gauge (Traditional)</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.scalableDesignGauge">
      <segment>
        <source>3. Scalable Design Gauge</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.advancedFeaturesExample">
      <segment>
        <source>4. Advanced Features (Text Display &amp; Styling)</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.typeScriptInterface">
      <segment>
        <source>TypeScript Interface</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.titleTemperature">
      <segment>
        <source>Temperature</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.titlePerformance">
      <segment>
        <source>Performance</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.titleBatteryLevel">
      <segment>
        <source>Battery Level</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.titleNetworkSignal">
      <segment>
        <source>Network Signal</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.titleStorageUsage">
      <segment>
        <source>Storage Usage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.titleDefaultGauge">
      <segment>
        <source>Gauge</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.descriptionCelsius">
      <segment>
        <source>Celsius</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.descriptionScore">
      <segment>
        <source>Score</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.descriptionPercentage">
      <segment>
        <source>Percentage</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.descriptionBars">
      <segment>
        <source>Bars</source>
      </segment>
    </unit>
    <unit id="demo.radialGaugeDemo.descriptionGBUsed">
      <segment>
        <source>GB Used</source>
      </segment>
    </unit>
    <unit id="demo.theme.custom">
      <segment>
        <source>Custom</source>
      </segment>
    </unit>
    <unit id="demo.theme.red">
      <segment>
        <source>Red</source>
      </segment>
    </unit>
    <unit id="demo.theme.green">
      <segment>
        <source>Green</source>
      </segment>
    </unit>
    <unit id="demo.theme.blue">
      <segment>
        <source>Blue</source>
      </segment>
    </unit>
    <unit id="demo.theme.yellow">
      <segment>
        <source>Yellow</source>
      </segment>
    </unit>
    <unit id="demo.theme.cyan">
      <segment>
        <source>Cyan</source>
      </segment>
    </unit>
    <unit id="demo.theme.magenta">
      <segment>
        <source>Magenta</source>
      </segment>
    </unit>
    <unit id="demo.theme.orange">
      <segment>
        <source>Orange</source>
      </segment>
    </unit>
    <unit id="demo.theme.chartreuse">
      <segment>
        <source>Chartreuse</source>
      </segment>
    </unit>
    <unit id="demo.theme.springGreen">
      <segment>
        <source>Spring Green</source>
      </segment>
    </unit>
    <unit id="demo.theme.azure">
      <segment>
        <source>Azure</source>
      </segment>
    </unit>
    <unit id="demo.theme.violet">
      <segment>
        <source>Violet</source>
      </segment>
    </unit>
    <unit id="demo.theme.rose">
      <segment>
        <source>Rose</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.title">
      <segment>
        <source>Realtime Gauge Settings</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.visualSettings">
      <segment>
        <source>Visual Settings</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.activeDisplay">
      <segment>
        <source>Active Display</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.activeDisplayDescription">
      <segment>
        <source>Display live gauge instead of passive icon</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.background">
      <segment>
        <source>Background</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.backgroundDescription">
      <segment>
        <source>Add a background color to the widget</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.showValueLabel">
      <segment>
        <source>Show Value Label</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.showValueLabelDescription">
      <segment>
        <source>Display numeric value in gauge center</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.showLabel">
      <segment>
        <source>Show Label</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.showLabelDescription">
      <segment>
        <source>Display a label in the top-right corner</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.labelText">
      <segment>
        <source>Label Text</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.labelPlaceholder">
      <segment>
        <source>e.g., kW, %, RPM</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.colorProfile">
      <segment>
        <source>Color Profile</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.colorProfileDynamic">
      <segment>
        <source>Dynamic (Theme Colors)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.colorProfileStatic">
      <segment>
        <source>Static (Performance Colors)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.realtimeDataSettings">
      <segment>
        <source>Real-time Data Settings</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.dataSource">
      <segment>
        <source>Data Source</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.dataSourceNone">
      <segment>
        <source>None (Static)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.dataSourceRandom">
      <segment>
        <source>Random</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.updateInterval">
      <segment>
        <source>Update Interval: <ph id="0" equiv="INTERPOLATION" disp="{{ localState.updateInterval }}"/>s</source>
      </segment>
    </unit>
    <unit id="demo.common.cancel">
      <segment>
        <source>Cancel</source>
      </segment>
    </unit>
    <unit id="demo.common.save">
      <segment>
        <source>Save</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.dialog.secondsFormat">
      <segment>
        <source><ph id="0" equiv="INTERPOLATION" disp="value"/>s</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.name">
      <segment>
        <source>Realtime Gauge</source>
      </segment>
    </unit>
    <unit id="demo.widgets.realtimeGauge.description">
      <segment>
        <source>Gauge with real-time data updates</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.title">
      <segment>
        <source>Sparkbar Settings</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.connectRealtime">
      <segment>
        <source>Connect to realtime data feed</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.frameRate">
      <segment>
        <source>Frame Rate (FPS)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.fps1">
      <segment>
        <source>1 FPS (Very Slow)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.fps5">
      <segment>
        <source>5 FPS (Slow)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.fps10">
      <segment>
        <source>10 FPS (Moderate)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.fps15">
      <segment>
        <source>15 FPS (Smooth)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.fps20">
      <segment>
        <source>20 FPS (Default)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.fps24">
      <segment>
        <source>24 FPS (Fast)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.fps30">
      <segment>
        <source>30 FPS (Faster)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.fps60">
      <segment>
        <source>60 FPS (High Refresh)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.numberOfBars">
      <segment>
        <source>Number of Bars</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.bars5">
      <segment>
        <source>5 bars (Default)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.bars10">
      <segment>
        <source>10 bars</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.bars15">
      <segment>
        <source>15 bars</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.bars20">
      <segment>
        <source>20 bars</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.bars25">
      <segment>
        <source>25 bars</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.bars30">
      <segment>
        <source>30 bars</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.bars50">
      <segment>
        <source>50 bars</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.bars100">
      <segment>
        <source>100 bars</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.responsiveBarColors">
      <segment>
        <source>Responsive bar colors</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.dialog.showBackground">
      <segment>
        <source>Show background</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.name">
      <segment>
        <source>Sparkbar</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkbar.description">
      <segment>
        <source>A sparkbar graph</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.title">
      <segment>
        <source>Sparkline Settings</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.connectRealtime">
      <segment>
        <source>Connect to realtime data feed</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.frameRate">
      <segment>
        <source>Frame Rate (FPS)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.fps1">
      <segment>
        <source>1 FPS (Very Slow)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.fps5">
      <segment>
        <source>5 FPS (Slow)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.fps10">
      <segment>
        <source>10 FPS (Moderate)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.fps15">
      <segment>
        <source>15 FPS (Smooth)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.fps20">
      <segment>
        <source>20 FPS (Default)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.fps24">
      <segment>
        <source>24 FPS (Fast)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.fps30">
      <segment>
        <source>30 FPS (Faster)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.fps60">
      <segment>
        <source>60 FPS (High Refresh)</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.responsiveLineColors">
      <segment>
        <source>Responsive line colors</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.dialog.showBackground">
      <segment>
        <source>Show background</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.name">
      <segment>
        <source>Sparkline</source>
      </segment>
    </unit>
    <unit id="demo.widgets.sparkline.description">
      <segment>
        <source>A sparkline graph</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.title">
      <segment>
        <source> Arrow Settings </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.direction">
      <segment>
        <source>Arrow Direction</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.direction.up">
      <segment>
        <source>Up</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.direction.right">
      <segment>
        <source>Right</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.direction.down">
      <segment>
        <source>Down</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.direction.left">
      <segment>
        <source>Left</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.opacity">
      <segment>
        <source> Opacity: <ph id="0" equiv="INTERPOLATION"/>% </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.background">
      <segment>
        <source> Background </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.dialog.backgroundHint">
      <segment>
        <source>Adds a background behind the arrow</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.common.cancel">
      <segment>
        <source> Cancel </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.common.save">
      <segment>
        <source> Save </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.name">
      <segment>
        <source>Arrow</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.arrow.description">
      <segment>
        <source>A generic arrow</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.title">
      <segment>
        <source> Clock Settings </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.displayMode">
      <segment>
        <source>Display Mode</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.mode.digital">
      <segment>
        <source>Digital</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.mode.analog">
      <segment>
        <source>Analog</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.showSeconds">
      <segment>
        <source> Show Seconds </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.background">
      <segment>
        <source> Background </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.backgroundDescription">
      <segment>
        <source>Adds a background behind the clock</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.timeFormat">
      <segment>
        <source>Time Format</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.format.24h">
      <segment>
        <source>24 Hour (14:30:45)</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.format.12h">
      <segment>
        <source>12 Hour (2:30:45 PM)</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.showSecondsDescription.digital">
      <segment>
        <source>Display seconds in the time</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.dialog.showSecondsDescription.analog">
      <segment>
        <source>Show the second hand on the clock</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.name">
      <segment>
        <source>Clock</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.clock.description">
      <segment>
        <source>Display time in analog or digital format</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.placeholder">
      <segment>
        <source>Enter your label text...</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.title">
      <segment>
        <source> Label Settings </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.labelText">
      <segment>
        <source>Label Text</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.responsive">
      <segment>
        <source> Responsive Text </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.responsiveDescription">
      <segment>
        <source>Automatically adjust text size to fit the widget</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.fontSize">
      <segment>
        <source>Font Size (px)</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.alignment">
      <segment>
        <source>Alignment</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.alignment.left">
      <segment>
        <source>Left</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.alignment.center">
      <segment>
        <source>Center</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.alignment.right">
      <segment>
        <source>Right</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.fontWeight">
      <segment>
        <source>Font Weight</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.fontWeight.normal">
      <segment>
        <source>Normal</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.fontWeight.bold">
      <segment>
        <source>Bold</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.opacity">
      <segment>
        <source> Opacity: <ph id="0" equiv="INTERPOLATION"/>% </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.background">
      <segment>
        <source> Background </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.backgroundDescription">
      <segment>
        <source>Adds a background behind the text</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.templateStringPlaceholder">
      <segment>
        <source>Optional: Text to use for size calculation</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.fontSizeLimits">
      <segment>
        <source> Font Size Limits </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.minSize">
      <segment>
        <source>Min Size (px)</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.maxSize">
      <segment>
        <source>Max Size (px)</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.templateString">
      <segment>
        <source>Template String</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.templateStringHint">
      <segment>
        <source>Use when displayed text varies but size should remain consistent</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.minSizeError">
      <segment>
        <source>Must be between 8-24px</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.minSizeRangeError">
      <segment>
        <source>Must be less than max size</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.minSizeHint">
      <segment>
        <source>8-24px range</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.maxSizeError">
      <segment>
        <source>Must be between 16-128px</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.maxSizeRangeError">
      <segment>
        <source>Must be greater than min size</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.dialog.maxSizeHint">
      <segment>
        <source>16-128px range</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.name">
      <segment>
        <source>Label</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.label.description">
      <segment>
        <source>A generic text label</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.title">
      <segment>
        <source> Radial Gauge Settings </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.value">
      <segment>
        <source>Value (0-100)</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.colorProfile">
      <segment>
        <source> Color Profile </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.colorProfile.dynamic">
      <segment>
        <source>Dynamic (Theme Colors)</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.colorProfile.static">
      <segment>
        <source>Static (Performance Colors)</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.activeDisplay">
      <segment>
        <source> Active Display </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.activeDisplayDescription">
      <segment>
        <source> Display live gauge instead of passive icon </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.background">
      <segment>
        <source> Background </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.backgroundDescription">
      <segment>
        <source> Add a background color to the widget </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.showValueLabel">
      <segment>
        <source> Show Value Label </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.dialog.showValueLabelDescription">
      <segment>
        <source> Display numeric value in gauge center </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.name">
      <segment>
        <source>Radial Gauge</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widgets.radialGauge.description">
      <segment>
        <source>A semi-circular gauge indicator</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.resize.dimensions">
      <segment>
        <source> <ph id="0" equiv="INTERPOLATION"/> × <ph id="1" equiv="INTERPOLATION_1"/> </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.menu.edit">
      <segment>
        <source>Edit Widget</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.menu.settings">
      <segment>
        <source>Settings</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.menu.delete">
      <segment>
        <source>Delete</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.unknown.widget.name">
      <segment>
        <source>Unknown Widget</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.unknown.widget.description">
      <segment>
        <source>Fallback widget for unknown widget types</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.settings.title">
      <segment>
        <source> Cell Display Settings </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.settings.cellId">
      <segment>
        <source> Cell ID: <pc id="0" equivStart="START_TAG_STRONG" equivEnd="CLOSE_TAG_STRONG" type="other"><ph id="1" equiv="INTERPOLATION"/></pc></source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.settings.mode.normal">
      <segment>
        <source> Normal </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.settings.mode.normal.description">
      <segment>
        <source> Standard cell display with full content visibility </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.settings.mode.flat">
      <segment>
        <source> Flat </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.cell.settings.mode.flat.description">
      <segment>
        <source> Simplified display with reduced visual emphasis </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.common.apply">
      <segment>
        <source> Apply </source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widget.list.available">
      <segment>
        <source>Available widgets</source>
      </segment>
    </unit>
    <unit id="ngx.dashboard.widget.list.item.ariaLabel">
      <segment>
        <source><ph id="0" equiv="PH" disp="widget.name"/> widget: <ph id="1" equiv="PH_1" disp="widget.description"/></source>
      </segment>
    </unit>
  </file>
</xliff>
